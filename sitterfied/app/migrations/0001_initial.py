# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.utils.timezone
import django.core.validators
import datetime
from django.conf import settings
import django_extensions.db.fields
import pyuploadcare.dj.models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('password', models.CharField(verbose_name='password', max_length=128)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(unique=True, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', verbose_name='username', validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username.', 'invalid')], max_length=30)),
                ('first_name', models.CharField(verbose_name='first name', blank=True, max_length=30)),
                ('last_name', models.CharField(verbose_name='last name', blank=True, max_length=30)),
                ('email', models.EmailField(verbose_name='email address', blank=True, max_length=75)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('status', models.CharField(default='trial', choices=[('paid', 'paid'), ('trial', 'trial')], max_length=10)),
                ('membership_exp_date', models.DateTimeField(null=True)),
                ('facebook_token', models.CharField(blank=True, null=True, max_length=256)),
                ('facebook_id', models.IntegerField(unique=True, blank=True, null=True)),
                ('google_imported', models.BooleanField(default=False)),
                ('address1', models.CharField(blank=True, max_length=255)),
                ('address2', models.CharField(default='', blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(default='AL', choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, max_length=2)),
                ('zip', models.CharField(blank=True, max_length=9)),
                ('timezone', models.CharField(blank=True, max_length=255)),
                ('cell', models.CharField(blank=True, max_length=12)),
                ('avatar', pyuploadcare.dj.models.ImageField(blank=True)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('notes', models.TextField(blank=True)),
                ('respond_by', models.DateTimeField(blank=True, null=True)),
                ('start_date_time', models.DateTimeField()),
                ('stop_date_time', models.DateTimeField()),
                ('num_children', models.IntegerField(default=1)),
                ('emergency_phone', models.CharField(blank=True, max_length=12)),
                ('address1', models.CharField(blank=True, max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(default='AL', choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, max_length=2)),
                ('zip', models.CharField(blank=True, max_length=9)),
                ('rate', models.DecimalField(default=0, max_digits=5, blank=True, decimal_places=2)),
                ('booking_status', models.CharField(default='Active', choices=[('Active', 'Active'), ('Canceled', 'Canceled'), ('Completed', 'Completed'), ('Declined', 'Declined'), ('Expired', 'Expired'), ('Pending', 'Pending')], max_length=10)),
                ('booking_type', models.CharField(default='Job', choices=[('Interview', 'Interview'), ('Job', 'Job'), ('Meetup Interview', 'Meetup Interview'), ('Phone Interview', 'Phone Interview')], max_length=20)),
                ('overnight', models.BooleanField(default=False)),
                ('canceled', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('certification', models.CharField(unique=True, max_length=128)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('name', models.CharField(default='', blank=True, max_length=50)),
                ('dob', models.DateTimeField(default=datetime.datetime.now, blank=True, null=True)),
                ('school', models.CharField(default='', blank=True, max_length=50)),
            ],
            options={
                'verbose_name_plural': 'children',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='IncomingSMSMessage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('sid', models.CharField(max_length=34)),
                ('date_created', models.DateTimeField()),
                ('date_updated', models.DateTimeField()),
                ('date_sent', models.DateTimeField()),
                ('to', models.CharField(max_length=16)),
                ('body', models.CharField(max_length=161)),
                ('status', models.CharField(max_length=12)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('language', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OtherService',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('service', models.CharField(unique=True, max_length=128)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user_ptr', models.OneToOneField(parent_link=True, serialize=False, primary_key=True, auto_created=True, to=settings.AUTH_USER_MODEL)),
                ('emergency_contact_one_name', models.CharField(blank=True, max_length=128)),
                ('emergency_contact_one_phone', models.CharField(blank=True, max_length=10)),
                ('emergency_contact_two_name', models.CharField(blank=True, max_length=128)),
                ('emergency_contact_two_phone', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'verbose_name': 'Parent',
            },
            bases=('app.user',),
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('phone_type', models.CharField(default='Work', choices=[('Cell', 'Cell'), ('Contact', 'Contact'), ('Emergency', 'Emergency'), ('Home', 'Home'), ('Other', 'Other'), ('Work', 'Work')], max_length=10)),
                ('number', models.CharField(max_length=25)),
                ('primary', models.BooleanField()),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('task_id', models.CharField(max_length=256)),
                ('booking', models.ForeignKey(to='app.Booking')),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('mon_early_morning', models.BooleanField(default=True)),
                ('tue_early_morning', models.BooleanField(default=True)),
                ('wed_early_morning', models.BooleanField(default=True)),
                ('thu_early_morning', models.BooleanField(default=True)),
                ('fri_early_morning', models.BooleanField(default=True)),
                ('sat_early_morning', models.BooleanField(default=True)),
                ('sun_early_morning', models.BooleanField(default=True)),
                ('mon_late_morning', models.BooleanField(default=True)),
                ('tue_late_morning', models.BooleanField(default=True)),
                ('wed_late_morning', models.BooleanField(default=True)),
                ('thu_late_morning', models.BooleanField(default=True)),
                ('fri_late_morning', models.BooleanField(default=True)),
                ('sat_late_morning', models.BooleanField(default=True)),
                ('sun_late_morning', models.BooleanField(default=True)),
                ('mon_early_afternoon', models.BooleanField(default=True)),
                ('tue_early_afternoon', models.BooleanField(default=True)),
                ('wed_early_afternoon', models.BooleanField(default=True)),
                ('thu_early_afternoon', models.BooleanField(default=True)),
                ('fri_early_afternoon', models.BooleanField(default=True)),
                ('sat_early_afternoon', models.BooleanField(default=True)),
                ('sun_early_afternoon', models.BooleanField(default=True)),
                ('mon_late_afternoon', models.BooleanField(default=True)),
                ('tue_late_afternoon', models.BooleanField(default=True)),
                ('wed_late_afternoon', models.BooleanField(default=True)),
                ('thu_late_afternoon', models.BooleanField(default=True)),
                ('fri_late_afternoon', models.BooleanField(default=True)),
                ('sat_late_afternoon', models.BooleanField(default=True)),
                ('sun_late_afternoon', models.BooleanField(default=True)),
                ('mon_early_evening', models.BooleanField(default=True)),
                ('tue_early_evening', models.BooleanField(default=True)),
                ('wed_early_evening', models.BooleanField(default=True)),
                ('thu_early_evening', models.BooleanField(default=True)),
                ('fri_early_evening', models.BooleanField(default=True)),
                ('sat_early_evening', models.BooleanField(default=True)),
                ('sun_early_evening', models.BooleanField(default=True)),
                ('mon_late_evening', models.BooleanField(default=True)),
                ('tue_late_evening', models.BooleanField(default=True)),
                ('wed_late_evening', models.BooleanField(default=True)),
                ('thu_late_evening', models.BooleanField(default=True)),
                ('fri_late_evening', models.BooleanField(default=True)),
                ('sat_late_evening', models.BooleanField(default=True)),
                ('sun_late_evening', models.BooleanField(default=True)),
                ('mon_overnight', models.BooleanField(default=True)),
                ('tue_overnight', models.BooleanField(default=True)),
                ('wed_overnight', models.BooleanField(default=True)),
                ('thu_overnight', models.BooleanField(default=True)),
                ('fri_overnight', models.BooleanField(default=True)),
                ('sat_overnight', models.BooleanField(default=True)),
                ('sun_overnight', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('mobile_booking_accepted_denied', models.BooleanField(default=True)),
                ('mobile_new_review', models.BooleanField(default=True)),
                ('mobile_booking_request', models.BooleanField(default=True)),
                ('mobile_friend_joined', models.BooleanField(default=True)),
                ('mobile_groups_added_network', models.BooleanField(default=True)),
                ('mobile_upcoming_booking_remind', models.BooleanField(default=True)),
                ('email_booking_accepted_denied', models.BooleanField(default=True)),
                ('email_new_review', models.BooleanField(default=True)),
                ('email_booking_request', models.BooleanField(default=True)),
                ('email_friend_joined', models.BooleanField(default=True)),
                ('email_groups_added_network', models.BooleanField(default=True)),
                ('email_upcoming_booking_remind', models.BooleanField(default=True)),
                ('email_news', models.BooleanField(default=False)),
                ('email_blog', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Sitter',
            fields=[
                ('user_ptr', models.OneToOneField(parent_link=True, serialize=False, primary_key=True, auto_created=True, to=settings.AUTH_USER_MODEL)),
                ('biography', models.TextField(blank=True)),
                ('gender', models.CharField(default='female', choices=[('female', 'female'), ('male', 'male')], max_length=10)),
                ('id_verified', models.BooleanField(default=False)),
                ('dob', models.DateTimeField(default=datetime.datetime.now)),
                ('smoker', models.BooleanField(default=False)),
                ('sick', models.BooleanField(default=True)),
                ('will_transport', models.BooleanField(default=True)),
                ('total_exp', models.SmallIntegerField()),
                ('infant_exp', models.SmallIntegerField(blank=True)),
                ('toddler_exp', models.SmallIntegerField(blank=True)),
                ('preschool_exp', models.SmallIntegerField(blank=True)),
                ('school_age_exp', models.SmallIntegerField(blank=True)),
                ('pre_teen_exp', models.SmallIntegerField(blank=True)),
                ('teen_exp', models.SmallIntegerField(blank=True)),
                ('special_needs_exp', models.BooleanField(default=True)),
                ('extra_exp', models.TextField(default='', blank=True, null=True)),
                ('highest_education', models.CharField(default='', blank=True, null=True, max_length=50)),
                ('last_school', models.CharField(default='', blank=True, null=True, max_length=50)),
                ('major', models.CharField(default='', blank=True, null=True, max_length=50)),
                ('occupation', models.CharField(default='', blank=True, null=True, max_length=50)),
                ('current_student', models.BooleanField(default=False)),
                ('one_child_min_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('one_child_max_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('two_child_min_rate', models.DecimalField(decimal_places=2, max_digits=5, blank=True)),
                ('two_child_max_rate', models.DecimalField(decimal_places=2, max_digits=5, blank=True)),
                ('three_child_min_rate', models.DecimalField(decimal_places=2, max_digits=5, blank=True)),
                ('three_child_max_rate', models.DecimalField(decimal_places=2, max_digits=5, blank=True)),
                ('smokers_ok', models.BooleanField(default=True)),
                ('dogs_ok', models.BooleanField(default=True)),
                ('cats_ok', models.BooleanField(default=True)),
                ('other_animals_ok', models.BooleanField(default=True)),
                ('has_drivers_licence', models.BooleanField(default=False)),
                ('travel_distance', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('certifications', models.ManyToManyField(blank=True, to='app.Certification')),
                ('other_services', models.ManyToManyField(blank=True, to='app.OtherService')),
            ],
            options={
                'verbose_name': 'Sitter',
            },
            bases=('app.user',),
        ),
        migrations.CreateModel(
            name='SitterReview',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('recommended', models.BooleanField()),
                ('rehire', models.BooleanField()),
                ('review', models.TextField(blank=True)),
                ('parent', models.ForeignKey(to='app.Parent', related_name='reviews')),
                ('sitter', models.ForeignKey(to='app.Sitter', related_name='reviews')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SpecialNeed',
            fields=[
                ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True, serialize=False)),
                ('created', django_extensions.db.fields.CreationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created', blank=True)),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='modified', blank=True)),
                ('need', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
                'get_latest_by': 'modified',
                'ordering': ('-modified', '-created'),
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='sitterreview',
            unique_together=set([('parent', 'sitter')]),
        ),
        migrations.AddField(
            model_name='settings',
            name='user',
            field=models.OneToOneField(null=True, to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schedule',
            name='sitter',
            field=models.OneToOneField(to='app.Sitter'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='phone',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='parent',
            name='bookmarks',
            field=models.ManyToManyField(blank=True, to='app.Sitter', related_name='bookmarks'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='parent',
            name='sitter_teams',
            field=models.ManyToManyField(blank=True, to='app.Sitter', related_name='sitter_teams'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contact',
            name='phone',
            field=models.ForeignKey(to='app.Phone'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='child',
            name='parent',
            field=models.ForeignKey(to='app.Parent', related_name='children'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='child',
            name='special_needs',
            field=models.ManyToManyField(blank=True, to='app.SpecialNeed'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='booking',
            name='accepted_sitter',
            field=models.ForeignKey(blank=True, null=True, to='app.Sitter'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='booking',
            name='declined_sitters',
            field=models.ManyToManyField(blank=True, to='app.Sitter', related_name='declined_bookings'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='booking',
            name='parent',
            field=models.ForeignKey(to='app.Parent', related_name='bookings'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='booking',
            name='sitters',
            field=models.ManyToManyField(to='app.Sitter', related_name='bookings'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='address',
            name='user',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='friends',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, related_name='friends_rel_+'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, related_query_name='user', help_text='The groups this user belongs to. A user will get all permissions granted to each of his/her group.', verbose_name='groups', to='auth.Group', related_name='user_set'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='invited_by',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='languages',
            field=models.ManyToManyField(blank=True, to='app.Language', related_name='users'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='sitter_groups',
            field=models.ManyToManyField(blank=True, to='app.Group'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_query_name='user', help_text='Specific permissions for this user.', verbose_name='user permissions', to='auth.Permission', related_name='user_set'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='user',
            name='users_in_network',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, related_name='users_in_network_rel_+'),
            preserve_default=True,
        ),
    ]
